//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from e:\PackageDev\OnionScript\src\OnionScript.Compiler\Grammar\OnionScript.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace OrbHall.OnionScript.Compiler {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="OnionScriptParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IOnionScriptVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.script"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScript([NotNull] OnionScriptParser.ScriptContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] OnionScriptParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.methodcall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodcall([NotNull] OnionScriptParser.MethodcallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorCallMethod</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorCallMethod([NotNull] OnionScriptParser.OperatorCallMethodContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorSet</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorSet([NotNull] OnionScriptParser.OperatorSetContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorAdd</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorAdd([NotNull] OnionScriptParser.OperatorAddContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorSubtract</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorSubtract([NotNull] OnionScriptParser.OperatorSubtractContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorMultiply</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorMultiply([NotNull] OnionScriptParser.OperatorMultiplyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorDivide</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorDivide([NotNull] OnionScriptParser.OperatorDivideContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorModulus</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorModulus([NotNull] OnionScriptParser.OperatorModulusContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorNot</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorNot([NotNull] OnionScriptParser.OperatorNotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorAnd</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorAnd([NotNull] OnionScriptParser.OperatorAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorOr</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorOr([NotNull] OnionScriptParser.OperatorOrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorNor</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorNor([NotNull] OnionScriptParser.OperatorNorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorNand</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorNand([NotNull] OnionScriptParser.OperatorNandContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorEquals</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorEquals([NotNull] OnionScriptParser.OperatorEqualsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorNotEquals</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorNotEquals([NotNull] OnionScriptParser.OperatorNotEqualsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorGreaterThan</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorGreaterThan([NotNull] OnionScriptParser.OperatorGreaterThanContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorGreaterThanEqual</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorGreaterThanEqual([NotNull] OnionScriptParser.OperatorGreaterThanEqualContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorLessThan</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorLessThan([NotNull] OnionScriptParser.OperatorLessThanContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorLessThanEqual</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorLessThanEqual([NotNull] OnionScriptParser.OperatorLessThanEqualContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorFor</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorFor([NotNull] OnionScriptParser.OperatorForContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorWhile</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorWhile([NotNull] OnionScriptParser.OperatorWhileContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OperatorDoWhile</c>
	/// labeled alternative in <see cref="OnionScriptParser.method_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorDoWhile([NotNull] OnionScriptParser.OperatorDoWhileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_import"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_import([NotNull] OnionScriptParser.Operator_importContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_function([NotNull] OnionScriptParser.Operator_functionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_let"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_let([NotNull] OnionScriptParser.Operator_letContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_return([NotNull] OnionScriptParser.Operator_returnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_for([NotNull] OnionScriptParser.Operator_forContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_while([NotNull] OnionScriptParser.Operator_whileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_dowhile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_dowhile([NotNull] OnionScriptParser.Operator_dowhileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_set([NotNull] OnionScriptParser.Operator_setContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_add"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_add([NotNull] OnionScriptParser.Operator_addContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_subtract"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_subtract([NotNull] OnionScriptParser.Operator_subtractContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_multiply"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_multiply([NotNull] OnionScriptParser.Operator_multiplyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_divide"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_divide([NotNull] OnionScriptParser.Operator_divideContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_modulus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_modulus([NotNull] OnionScriptParser.Operator_modulusContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_not"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_not([NotNull] OnionScriptParser.Operator_notContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_and"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_and([NotNull] OnionScriptParser.Operator_andContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_or"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_or([NotNull] OnionScriptParser.Operator_orContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_nor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_nor([NotNull] OnionScriptParser.Operator_norContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_nand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_nand([NotNull] OnionScriptParser.Operator_nandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_equal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_equal([NotNull] OnionScriptParser.Operator_equalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_notequal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_notequal([NotNull] OnionScriptParser.Operator_notequalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_greaterthan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_greaterthan([NotNull] OnionScriptParser.Operator_greaterthanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_greaterthanequal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_greaterthanequal([NotNull] OnionScriptParser.Operator_greaterthanequalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_lessthan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_lessthan([NotNull] OnionScriptParser.Operator_lessthanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.operator_lessthanequal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperator_lessthanequal([NotNull] OnionScriptParser.Operator_lessthanequalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.import_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImport_statement([NotNull] OnionScriptParser.Import_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.anonymous_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnonymous_function([NotNull] OnionScriptParser.Anonymous_functionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_definition([NotNull] OnionScriptParser.Function_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.function_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_return([NotNull] OnionScriptParser.Function_returnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.variable_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable_definition([NotNull] OnionScriptParser.Variable_definitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitText([NotNull] OnionScriptParser.TextContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInteger([NotNull] OnionScriptParser.IntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloat([NotNull] OnionScriptParser.FloatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean([NotNull] OnionScriptParser.BooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] OnionScriptParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.argument_text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_text([NotNull] OnionScriptParser.Argument_textContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.argument_integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_integer([NotNull] OnionScriptParser.Argument_integerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.argument_float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_float([NotNull] OnionScriptParser.Argument_floatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.argument_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_number([NotNull] OnionScriptParser.Argument_numberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.argument_boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_boolean([NotNull] OnionScriptParser.Argument_booleanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.argument_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_statement([NotNull] OnionScriptParser.Argument_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OnionScriptParser.argument_any"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_any([NotNull] OnionScriptParser.Argument_anyContext context);
}
} // namespace OrbHall.OnionScript.Compiler
